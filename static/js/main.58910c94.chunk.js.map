{"version":3,"sources":["components/card/card.tsx","components/card-list/card-list.tsx","components/search-box/seach-box.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","cardListProps","monsters","map","SearchBox","searchBoxProps","type","placeholder","placeHolder","onChange","handleChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAiBeA,MAVf,SAAcC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCKfC,G,MATE,SAACC,GAChB,OACE,qBAAKR,UAAU,YAAf,SACGQ,EAAcC,SAASC,KAAI,SAACP,GAAD,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCSZO,G,MAXG,SAACC,GACjB,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLC,YAAaF,EAAeG,YAC5BC,SAAUJ,EAAeK,iBCgChBC,E,kDArCb,WAAYnB,GAAa,IAAD,8BACtB,cAAMA,IAcRkB,aAAe,SAACE,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,IALO,E,gEASH,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAAD,OAAc,EAAKP,SAAS,CAAEX,SAAUkB,S,+BAOxC,IAAD,EAC2BE,KAAKL,MAA/Bf,EADD,EACCA,SAAUY,EADX,EACWA,YACZS,EAAmBrB,EAASsB,QAAO,SAAC5B,GAAD,OACvCA,EAAQE,KAAK2B,cAAcC,SAASZ,EAAYW,kBAElD,OACE,sBAAKhC,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CACEe,YAAY,kBACZE,aAAcY,KAAKZ,eAErB,cAAC,EAAD,CAAUR,SAAUqB,W,GAnCVI,aCOHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.58910c94.chunk.js","sourcesContent":["import React from 'react'\r\nimport { CardListDetail } from '../card-list/card-list.model';\r\n\r\nimport './cards.style.css';\r\ninterface CardProps{\r\n    monster:CardListDetail.RootObject\r\n}\r\nfunction Card(props:CardProps) {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\";\r\nimport Card from \"../card/card\";\r\nimport { CardListDetail } from \"./card-list.model\";\r\nimport \"./card-list.styles.css\";\r\n\r\ninterface cardListProps {\r\n  monsters: CardListDetail.RootObject[];\r\n}\r\nconst CardList = (cardListProps: cardListProps) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {cardListProps.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default CardList;\r\n","import \"./search-box.styles.css\";\r\n\r\nimport React from \"react\";\r\n\r\ninterface SearchBoxProps {\r\n  placeHolder: string;\r\n  handleChange:\r\n    | ((event: React.ChangeEvent<HTMLInputElement>) => void)\r\n    | undefined;\r\n}\r\nconst SearchBox = (searchBoxProps: SearchBoxProps) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={searchBoxProps.placeHolder}\r\n      onChange={searchBoxProps.handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport CardList from \"./components/card-list/card-list\";\nimport { CardListDetail } from \"./components/card-list/card-list.model\";\nimport SearchBox from \"./components/search-box/seach-box\";\n\nclass App extends Component<\n  any,\n  { searchField: string; monsters: CardListDetail.RootObject[] }\n> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((response) => this.setState({ monsters: response }));\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1> Monsters Rolodex</h1>\n        <SearchBox\n          placeHolder=\"Search Monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}